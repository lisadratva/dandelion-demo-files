repeat?? 2 4 ('TRAV1-2*01', 'TRAJ33*01', 'CAVDSNYQLIW', 'tgtgctgtggatagcaactatcagttaatctgg') ('TRAV20*01', 'TRAJ33*01', 'CAVDSNYQLIW', 'tgtgctgtggatagcaactatcagttaatctgg')
repeat?? 37 19 ('TRBV11-2*01', 'TRBJ2-2*01', 'CASSLQGAGELFF', 'tgtgccagcagcttacagggggccggggagctgtttttt') ('TRBV7-3*01', 'TRBJ2-2*01', 'CASSLQGAGELFF', 'tgtgccagcagcttacagggggccggggagctgtttttt')
repeat?? 1 19 ('TRBV7-2*01', 'TRBJ2-1*01', 'CASSLRGGGAYNEQFF', 'tgtgccagcagcttaaggggcgggggggcctacaatgagcagttcttc') ('TRBV7-3*01', 'TRBJ2-1*01', 'CASSLRGGGAYNEQFF', 'tgtgccagcagcttaaggggcgggggggcctacaatgagcagttcttc')
repeat?? 5 56 ('TRBV7-2*01', 'TRBJ1-5*01', 'CASSLGGNSNQPQHF', 'tgtgccagcagcttaggggggaatagcaatcagccccagcatttt') ('TRBV7-9*01', 'TRBJ1-5*01', 'CASSLGGNSNQPQHF', 'tgtgccagcagcttaggggggaatagcaatcagccccagcatttt')
repeat?? 3 11 ('TRBV7-2*01', 'TRBJ2-5*01', 'CASSLAGGQETQYF', 'tgtgccagcagcttagcgggggggcaagagacccagtacttc') ('TRBV7-3*01', 'TRBJ2-5*01', 'CASSLAGGQETQYF', 'tgtgccagcagcttagcgggggggcaagagacccagtacttc')
repeat?? 28 115 ('TRBV6-5*01', 'TRBJ1-1*01', 'CASSYWNTEAFF', 'tgtgccagcagttactggaacactgaagctttcttt') ('TRBV6-6*01', 'TRBJ1-1*01', 'CASSYWNTEAFF', 'tgtgccagcagttactggaacactgaagctttcttt')
repeat?? 7 39 ('TRBV7-2*01', 'TRBJ1-1*01', 'CASSLDRNTEAFF', 'tgtgccagcagcttggacaggaacactgaagctttcttt') ('TRBV7-3*01', 'TRBJ1-1*01', 'CASSLDRNTEAFF', 'tgtgccagcagcttggacaggaacactgaagctttcttt')
repeat?? 3 6 ('TRAV1-2*01', 'TRAJ33*01', 'CAVRDSNYQLIW', 'tgtgctgtgagagatagcaactatcagttaatctgg') ('TRAV3*01', 'TRAJ33*01', 'CAVRDSNYQLIW', 'tgtgctgtgagagatagcaactatcagttaatctgg')
repeat?? 3 5 ('TRAV8-4*01', 'TRAJ40*01', 'CAVSTSGTYKYIF', 'tgtgctgtgagtacctcaggaacctacaaatacatcttt') ('TRAV8-6*01', 'TRAJ40*01', 'CAVSTSGTYKYIF', 'tgtgctgtgagtacctcaggaacctacaaatacatcttt')
repeat?? 46 3 ('TRBV10-3*01', 'TRBJ1-5*01', 'CAISGTNNQPQHF', 'tgtgccatcagtgggacaaacaatcagccccagcatttt') ('TRBV6-5*01', 'TRBJ1-5*01', 'CAISGTNNQPQHF', 'tgtgccatcagtgggacaaacaatcagccccagcatttt')
repeat?? 37 12 ('TRBV11-2*01', 'TRBJ2-3*01', 'CASSLGGNTDTQYF', 'tgtgccagcagcttaggaggcaacacagatacgcagtatttt') ('TRBV7-2*01', 'TRBJ2-3*01', 'CASSLGGNTDTQYF', 'tgtgccagcagcttaggaggcaacacagatacgcagtatttt')
repeat?? 2 43 ('TRBV7-2*01', 'TRBJ2-3*01', 'CASSLTTSGDTDTQYF', 'tgtgccagcagcttaactactagcggggacacagatacgcagtatttt') ('TRBV7-3*01', 'TRBJ2-3*01', 'CASSLTTSGDTDTQYF', 'tgtgccagcagcttaactactagcggggacacagatacgcagtatttt')
repeat?? 8 2 ('TRBV27*01', 'TRBJ2-3*01', 'CASSLGTSGGDTQYF', 'tgtgccagcagtttagggactagcgggggggatacgcagtatttt') ('TRBV6-1*01', 'TRBJ2-3*01', 'CASSLGTSGGDTQYF', 'tgtgccagcagtttagggactagcgggggggatacgcagtatttt')
ab_counts: [((57, 83), 11553), ((2, 2), 933), ((3, 3), 883), ((4, 4), 825), ((1, 1), 753), ((5, 5), 690), ((7, 6), 622), ((2, 3), 597), ((6, 6), 536), ((6, 5), 477), ((1, 2), 477), ((5, 4), 473), ((7, 7), 458), ((3, 4), 457), ((8, 8), 413), ((8, 7), 409), ((4, 5), 381), ((9, 8), 366), ((9, 9), 353), ((4, 3), 297), ((3, 2), 293), ((10, 9), 276), ((5, 6), 259), ((7, 8), 244), ((6, 7), 217), ((10, 10), 186), ((7, 5), 182), ((12, 12), 159), ((10, 8), 158), ((2, 4), 141), ((1, 3), 138), ((11, 10), 137), ((2, 1), 136), ((9, 7), 129), ((11, 11), 117), ((12, 10), 117), ((8, 9), 112), ((8, 6), 106), ((11, 9), 101), ((16, 15), 97), ((14, 14), 92), ((13, 13), 90), ((15, 15), 88), ((3, 5), 83), ((15, 13), 82), ((10, 11), 82), ((9, 10), 81), ((12, 11), 79), ((6, 4), 77), ((16, 14), 76), ((5, 7), 74), ((5, 3), 73), ((13, 12), 68), ((16, 16), 66), ((14, 13), 66), ((14, 12), 65), ((18, 20), 64), ((4, 6), 64), ((17, 15), 63), ((9, 6), 60), ((11, 8), 55), ((18, 17), 54), ((13, 11), 54), ((15, 16), 48), ((8, 5), 47), ((23, 21), 45), ((14, 11), 44), ((17, 18), 39), ((21, 18), 36), ((12, 9), 36), ((19, 18), 35), ((20, 17), 35), ((18, 14), 33), ((11, 12), 33), ((6, 8), 33), ((1, 4), 33), ((18, 16), 32), ((4, 2), 31), ((17, 14), 30), ((13, 10), 29), ((15, 14), 28), ((9, 11), 27), ((2, 5), 26), ((13, 14), 25), ((22, 22), 23), ((7, 9), 23), ((20, 21), 22), ((24, 21), 22), ((17, 19), 22), ((10, 7), 22), ((19, 19), 21), ((18, 18), 20), ((19, 20), 20), ((20, 15), 19), ((8, 10), 18), ((21, 15), 17), ((3, 1), 17), ((20, 16), 16), ((14, 15), 16), ((19, 14), 16), ((15, 11), 16), ((17, 17), 16), ((18, 15), 16), ((11, 7), 16), ((18, 13), 14), ((12, 13), 13), ((16, 13), 13), ((16, 12), 13), ((10, 6), 13), ((15, 12), 12), ((12, 14), 12), ((10, 13), 12), ((11, 13), 11), ((7, 10), 10), ((13, 9), 10), ((3, 6), 10), ((12, 8), 9), ((8, 11), 8), ((6, 9), 8), ((12, 7), 8), ((5, 8), 7), ((4, 7), 7), ((9, 5), 6), ((11, 6), 6), ((6, 2), 5), ((7, 4), 5), ((6, 3), 4), ((5, 1), 4), ((5, 2), 3), ((4, 1), 3)]
old_unpaired_barcodes: 58 old_paired_barcodes: 28576 new_stringent_paired_barcodes: 889
compute tcrdist distance matrix for 831 clonotypes
Using C++ TCRdist calculator
Read 831 paired tcrs from file conga_tcrdist_clones_AB.dist_50_kpcs_tcrs.tsv
making conga_tcrdist_clones_AB.dist_50_kpcs_tcrdists.txt
........
running KernelPCA with None kernel distance matrix shape= (831, 831) D.max()= 981.0 force_Dmax= None
writing TCRdist kernel PCs to outfile: conga_tcrdist_clones_AB.dist_50_kpcs
If this all worked you should be able to pass conga_tcrdist_clones.tsv as the --clones_file argument to run_conga.py
DONE
